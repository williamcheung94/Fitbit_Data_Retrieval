import gather_keys_oauth2 as Oauth2import_fitbit
import pandas as pd
import datetime
import fitbit
import gather_keys_oauth2 as Oauth2
CLIENT_ID='22BP9G'
CLIENT_SECRET='0ed0177c33c7e35e32dafcb99ace5123'

server=Oauth2.OAuth2Server(CLIENT_ID, CLIENT_SECRET)
server.browser_authorize()
ACCESS_TOKEN=str(server.fitbit.client.session.token['access_token'])
REFRESH_TOKEN=str(server.fitbit.client.session.token['refresh_token'])
auth2_client=fitbit.Fitbit(CLIENT_ID,CLIENT_SECRET,oauth2=True,access_token=ACCESS_TOKEN,refresh_token=REFRESH_TOKEN)

oneDate = pd.datetime(year = 2020, month = 2, day = 22)
intraDataCal = auth2_client.intraday_time_series('activities/calories', oneDate, detail_level='1min')
intraDataHR = auth2_client.intraday_time_series('activities/heart', oneDate, detail_level='1sec')
intraDataCalBMR = auth2_client.intraday_time_series('activities/caloriesBMR', oneDate, detail_level='1min')
intraDataSteps = auth2_client.intraday_time_series('activities/steps', oneDate, detail_level='1min')
intraDataDis = auth2_client.intraday_time_series('activities/distance', oneDate, detail_level='1min')
intraDataFl = auth2_client.intraday_time_series('activities/floors', oneDate, detail_level='1min')
intraDataEl = auth2_client.intraday_time_series('activities/elevation', oneDate, detail_level='1min')
intraDataMinSed = auth2_client.intraday_time_series('activities/minutesSedentary', oneDate, detail_level='1min')
intraDataMinLA = auth2_client.intraday_time_series('activities/minutesLightlyActive', oneDate, detail_level='1min')
intraDataMinFA = auth2_client.intraday_time_series('activities/minutesFairlyActive', oneDate, detail_level='1min')
intraDataMinVA = auth2_client.intraday_time_series('activities/minutesVeryActive', oneDate, detail_level='1min')
intraDataAC = auth2_client.intraday_time_series('activities/activityCalories', oneDate, detail_level='1min')

intraDataTCal = auth2_client.intraday_time_series('activities/tracker/calories', oneDate, detail_level='1min')
intraDataTSteps = auth2_client.intraday_time_series('activities/tracker/steps', oneDate, detail_level='1min')
intraDataTDis = auth2_client.intraday_time_series('activities/tracker/distance', oneDate, detail_level='1min')
intraDataTFl = auth2_client.intraday_time_series('activities/tracker/floors', oneDate, detail_level='1min')
intraDataTEl = auth2_client.intraday_time_series('activities/tracker/elevation', oneDate, detail_level='1min')
intraDataTMinSed = auth2_client.intraday_time_series('activities/tracker/minutesSedentary', oneDate, detail_level='1min')
intraDataTMinLA = auth2_client.intraday_time_series('activities/tracker/minutesLightlyActive', oneDate, detail_level='1min')
intraDataTMinFA = auth2_client.intraday_time_series('activities/tracker/minutesFairlyActive', oneDate, detail_level='1min')
intraDataTMinVA = auth2_client.intraday_time_series('activities/tracker/minutesVeryActive', oneDate, detail_level='1min')
intraDataTAC = auth2_client.intraday_time_series('activities/tracker/activityCalories', oneDate, detail_level='1min')

#activitiesData = pd.json_normalize(auth2_client.activities())
#sleepData = pd.json_normalize(auth2_client.get_sleep(date=oneDate))
DataCal = pd.json_normalize(intraDataCal)
DataHR = pd.json_normalize(intraDataHR)
DataCalBMR = pd.json_normalize(intraDataCalBMR)
DataSteps = pd.json_normalize(intraDataSteps)
DataDis = pd.json_normalize(intraDataDis)
DataFl = pd.json_normalize(intraDataFl)
DataEl = pd.json_normalize(intraDataEl)
DataMinSed = pd.json_normalize(intraDataMinSed)
DataMinLA = pd.json_normalize(intraDataMinLA)
DataMinFA = pd.json_normalize(intraDataMinFA)
DataMinVA = pd.json_normalize(intraDataMinVA)
DataAC = pd.json_normalize(intraDataAC)

DataTCal = pd.json_normalize(intraDataTCal)
DataTSteps = pd.json_normalize(intraDataTSteps)
DataTDis = pd.json_normalize(intraDataTDis)
DataTFl = pd.json_normalize(intraDataTFl)
DataTEl = pd.json_normalize(intraDataTEl)
DataTMinSed = pd.json_normalize(intraDataTMinSed)
DataTMinLA = pd.json_normalize(intraDataTMinLA)
DataTMinFA = pd.json_normalize(intraDataTMinFA)
DataTMinVA = pd.json_normalize(intraDataTMinVA)
DataTAC = pd.json_normalize(intraDataTAC)


writer1 = pd.ExcelWriter('Intraday_Data.xlsx', engine='xlsxwriter')
writer2 = pd.ExcelWriter('Intraday_Data_Tracker.xlsx', engine='xlsxwriter')

DataCal.to_excel(writer1, sheet_name="sheet1")
DataHR.to_excel(writer1, sheet_name="sheet2")
DataCalBMR.to_excel(writer1, sheet_name="sheet3")
DataSteps.to_excel(writer1, sheet_name="sheet4")
DataDis.to_excel(writer1, sheet_name="sheet5")
DataFl.to_excel(writer1, sheet_name="sheet6")
DataEl.to_excel(writer1, sheet_name="sheet7")
DataMinSed.to_excel(writer1, sheet_name="sheet8")
DataMinLA.to_excel(writer1, sheet_name="sheet9")
DataMinFA.to_excel(writer1, sheet_name="sheet10")
DataMinVA.to_excel(writer1, sheet_name="sheet11")
DataAC.to_excel(writer1, sheet_name="sheet12")

DataTCal.to_excel(writer2, sheet_name="sheet1")
DataTSteps.to_excel(writer2, sheet_name="sheet2")
DataTDis.to_excel(writer2, sheet_name="sheet3")
DataTFl.to_excel(writer2, sheet_name="sheet4")
DataTEl.to_excel(writer2, sheet_name="sheet5")
DataTMinSed.to_excel(writer2, sheet_name="sheet6")
DataTMinLA.to_excel(writer2, sheet_name="sheet7")
DataTMinFA.to_excel(writer2, sheet_name="sheet8")
DataTMinVA.to_excel(writer2, sheet_name="sheet9")
DataTAC.to_excel(writer2, sheet_name="sheet10")

writer1.save()
writer2.save()
